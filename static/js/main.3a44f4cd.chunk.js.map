{"version":3,"sources":["redux/ProductsReducer.js","redux/store.js","components/Bill.js","redux/ProductsAction.js","components/CartProduct.js","components/Carts.js","components/Header.js","components/Products.js","components/Homepage.js","App.js","index.js"],"names":["initialState","products","loading","cart","page","searchText","changeMode","window","location","href","search","ProductsReducer","state","action","type","data","item","product","mode","store","createStore","applyMiddleware","logger","thunk","connect","props","tax","length","map","Number","quantity","price","toFixed","Fragment","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","index","scope","name","Button","onClick","swal","title","text","icon","buttons","then","willDelete","origin","style","width","variant","color","algoliasearch","initIndex","setProducts","result","updateCart","fetch_products","dispatch","getState","hits","subindex","objectID","catch","remove_from_cart","add","remove_all","dangerMode","filter","useStyles","makeStyles","theme","root","display","margin","details","flexDirection","content","flex","cover","backgroundSize","controls","alignItems","paddingLeft","spacing","paddingBottom","paperroot","flexGrow","overflow","padding","paper","maxWidth","classes","changeQuantity","Card","float","className","CardMedia","image","CardContent","Typography","maxHeight","marginLeft","paddingRight","value","readOnly","step","max","min","Grid","container","wrap","xs","fleft","mtop","marginTop","Carts","md","marginBottom","menuButton","marginRight","position","borderRadius","shape","backgroundColor","fade","palette","common","white","breakpoints","up","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","total_products","visible","AppBar","Toolbar","to","InputBase","placeholder","input","inputProps","onChange","event","target","media","textAlign","ownProps","viewCart","Container","CircularProgress","Pagination","count","CardActionArea","description","CardActions","in_cart","size","addInCart","add_to_cart","Alert","severity","Homepage","exact","path","Products","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a44f4cd.chunk.js","sourcesContent":["const initialState = {\r\n    products: [],\r\n    loading: true,\r\n    cart: [],\r\n    page: 1,\r\n    searchText: '',\r\n    changeMode: (window.location.href.search('/cart') > -1),\r\n}\r\n\r\nconst ProductsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case 'SET_PRODUCTS': return {\r\n            ...state,\r\n            loading: false,\r\n            products: action.data,\r\n        }\r\n        case 'ADD_TO_CART': \r\n        case 'UPDATE_CART': \r\n        return {\r\n            ...state,\r\n            cart: action.item,\r\n            products: action.product,\r\n        }\r\n        \r\n        case 'CHANGE_MODE':\r\n            return {\r\n                ...state,\r\n                changeMode: action.mode\r\n            }\r\n        case 'SET_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.page,\r\n            }\r\n        case 'SEARCH_PRODUCT':\r\n            return {\r\n                ...state,\r\n                searchText: action.searchText,\r\n                page: action.page\r\n            }\r\n        default : return state\r\n    }\r\n}\r\nexport default ProductsReducer","import {createStore,applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport ProductsReducer from './ProductsReducer'\r\nimport thunk from \"redux-thunk\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nconst store = createStore(ProductsReducer, applyMiddleware(logger,thunk));\r\n\r\nexport default store","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button } from '@material-ui/core';\r\nimport swal from 'sweetalert';\r\n\r\nfunction Bill(props) {\r\n    let tax = 0;\r\n    if ((props.state.cart.length > 0)) {\r\n        props.state.cart.map((item) => {\r\n            tax += Number((item.quantity * (Number(item.price) + Number(item.price) * (2/100))));\r\n        });\r\n        tax = tax.toFixed(2);\r\n    }\r\n\r\n    let checkout = function() {\r\n        swal({\r\n            title: \"Do you want to checkout?\",\r\n            text: 'This is the demo page for the checkout, it will reset all the state!',\r\n            icon: \"warning\",\r\n            buttons: [\"No\", \"Yes\"],\r\n        }).then(willDelete => {\r\n            if (willDelete) {\r\n                window.location.href = window.location.origin;\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {(props.state.cart.length > 0) ?\r\n                <React.Fragment>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Product</TableCell>\r\n                                    <TableCell align=\"right\">Price</TableCell>\r\n                                    <TableCell align=\"right\">Quantity</TableCell>\r\n                                    <TableCell align=\"right\">Tax</TableCell>\r\n                                    <TableCell align=\"right\">Total</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {props.state.cart.map((item,index) => {\r\n                                    let tax = (item.quantity * (Number(item.price) + Number(item.price) * (2/100))).toFixed(2);\r\n\r\n                                    return (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {item.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">${item.price}</TableCell>\r\n                                        <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                                        <TableCell align=\"right\">2%</TableCell>\r\n                                        <TableCell align=\"right\">${tax}</TableCell>\r\n                                    </TableRow>\r\n                                    )\r\n                                })}\r\n                        </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TableContainer component={Paper}>\r\n                        <Table>\r\n                            <TableBody>\r\n                                <TableRow >\r\n                                    <TableCell align=\"right\">Total</TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                    <TableCell align=\"right\">$ {tax}</TableCell>\r\n                                </TableRow>\r\n                        </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <Button onClick={checkout} style={{width: '100%'}} variant=\"contained\" color=\"secondary\">\r\n                        Checkout\r\n                    </Button>\r\n                </React.Fragment>\r\n                \r\n            : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Bill)\r\n","import swal from 'sweetalert';\r\nimport algoliasearch from 'algoliasearch/lite';\r\n\r\nconst client = algoliasearch('NY87YKT8V0', 'c876b56496c530946cd1bcf8d6f31c10');\r\nconst index = client.initIndex('dev_PRODUCT');\r\n\r\nwindow.index = index;\r\nexport const setProducts = (result) => {\r\n    return {\r\n        type: \"SET_PRODUCTS\",\r\n        data: result,\r\n    };\r\n};\r\nexport const changePage = (page, searchText) => {\r\n    return {\r\n        type: \"SET_PAGE\",\r\n        page: page,\r\n        searchText: searchText\r\n    };\r\n};\r\n\r\n\r\nexport const addInCart = (item, product) => {\r\n    return {\r\n        type: \"ADD_TO_CART\",\r\n        item: item,\r\n        product: product\r\n    };\r\n};\r\n\r\nexport const searchProduct = (searchText) => {\r\n    return {\r\n        type: \"SEARCH_PRODUCT\",\r\n        searchText: searchText,\r\n        page: 1\r\n    };\r\n};\r\n\r\nexport const changeMode = (mode) => {\r\n    return {\r\n        type: \"CHANGE_MODE\",\r\n        mode: mode,\r\n    };\r\n};\r\n\r\nexport const updateCart = (item, product) => {\r\n    return {\r\n        type: \"UPDATE_CART\",\r\n        item: item,\r\n        product: product\r\n    };\r\n};\r\n\r\nexport const fetch_products = () => {\r\n    return function(dispatch, getState) {\r\n        let {page, cart, searchText} = getState();\r\n        index.search(searchText, {\r\n            page: page,\r\n        }).then(({ hits }) => {\r\n            for (let index in cart) {\r\n                for (let subindex in hits) {\r\n                    if (cart[index].objectID === hits[subindex].objectID) {\r\n                        hits[subindex]['in_cart'] = 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            dispatch(setProducts(hits))\r\n        }).catch(()=> {\r\n            dispatch(setProducts([]))\r\n        });\r\n        \r\n    };\r\n};\r\n\r\n\r\nexport const add_to_cart = (objectID) => {\r\n    return function(dispatch, getState) {\r\n        let {products, cart} = getState();\r\n        let item = [];\r\n        for (let index in products) {\r\n            if (products[index].objectID === objectID) {\r\n                item = products[index];\r\n                products[index]['in_cart'] = 1;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (cart.length > 0) {\r\n            for (let index in cart) {\r\n                if (cart[index].objectID === objectID) {\r\n                    item['quantity'] = cart[index]['quantity'];\r\n                    break;\r\n                } else {\r\n                    item['quantity'] = 1;\r\n                }\r\n            }\r\n        } else {\r\n            item['quantity'] = 1;\r\n        }\r\n\r\n        cart[cart.length] = item;\r\n        dispatch(addInCart(cart, products));\r\n    };\r\n};\r\n\r\nexport const remove_from_cart = (objectID, add = false, remove_all = false) => {\r\n    return function(dispatch, getState) {\r\n        let {products, cart} = getState();\r\n        for (let subindex in products) {\r\n            products[subindex]['in_cart'] = 0;\r\n        }\r\n        let item = [];\r\n        for (let index in cart) {\r\n            if (cart[index].objectID === objectID) {\r\n                item['quantity'] = (add) ? (cart[index]['quantity'] + 1) : (cart[index]['quantity'] - 1);\r\n                cart[index]['quantity'] = item['quantity'];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!add && remove_all && item['quantity'] > 0) {\r\n                swal({\r\n                    title: \"Do you want to remove all?\",\r\n                    text: 'There is more than one quantity added in the cart. To remove the single quantity, Go to the cart!',\r\n                    icon: \"warning\",\r\n                    buttons: [\"Close\", \"Remove All\"],\r\n                    dangerMode: true,\r\n                }).then(willDelete => {\r\n                    if (willDelete) {\r\n                        cart = cart.filter(data => !(data.objectID === objectID));\r\n                        for (let index in cart) {\r\n                            for (let subindex in products) {\r\n                                if (cart[index].objectID === products[subindex].objectID) {\r\n                                    products[subindex]['in_cart'] = 1;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        dispatch(updateCart(cart, products));\r\n                    }\r\n                });\r\n        } else {\r\n            if (item['quantity'] === 0) {\r\n                cart = cart.filter(data => !(data.objectID === objectID));\r\n            }\r\n            for (let index in cart) {\r\n                for (let subindex in products) {\r\n                    if (cart[index].objectID === products[subindex].objectID) {\r\n                        products[subindex]['in_cart'] = 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            dispatch(updateCart(cart, products));\r\n        }\r\n    };\r\n};\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\nimport { remove_from_cart } from '../redux/ProductsAction'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: 356,\r\n    margin: 5,\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n  },\r\n  cover: {\r\n    width: 151,\r\n    backgroundSize: 'contain'\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  paperroot: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    padding: theme.spacing(0, 3),\r\n  },\r\n  paper: {\r\n    maxWidth: 400,\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      state: state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      dispatch: dispatch,\r\n  }\r\n}\r\n\r\nfunction CartProduct(props) {\r\n    const classes = useStyles();\r\n    let changeQuantity = function(objectID, add) {\r\n        props.dispatch(remove_from_cart(objectID, add))\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n      {(props.state.cart.length > 0) ?\r\n          props.state.cart.map((item,index) => {\r\n            return (\r\n                <Card key={index} style={{float:'left'}} className={classes.root}>\r\n                    <CardMedia\r\n                        className={classes.cover}\r\n                        image={item.image}\r\n                        title={item.name}\r\n                    />\r\n                    <div className={classes.details}>\r\n                        <CardContent className={classes.content}>\r\n                            <Typography style={{maxHeight: '40px'}} variant=\"body2\">\r\n                                {item.name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <div className={classes.controls}>\r\n                            <Typography variant=\"caption\" display=\"block\">\r\n                                Price : $ {item.price}\r\n                            </Typography>\r\n                            <Typography style={{ marginLeft: 'auto',paddingRight: '0px'}} variant=\"caption\" display=\"block\">\r\n                                Quantity :\r\n                                <div className=\"quantity_button\">\r\n                                    <input type=\"button\" onClick={()=>changeQuantity(item.objectID, false)} value=\"-\" className=\"button-minus\" />\r\n                                    <input type=\"number\" readOnly step=\"1\" max=\"\" min=\"1\" value={item.quantity} name=\"quantity\" className=\"quantity-field\" />\r\n                                    <input type=\"button\" onClick={()=>changeQuantity(item.objectID, true)} value=\"+\" className=\"button-plus\" />\r\n                                </div>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            )\r\n          })\r\n      : (<div className={classes.paperroot}>\r\n        <Paper className={classes.paper}>\r\n          <Grid container wrap=\"nowrap\" spacing={2}>\r\n            <Grid item xs>\r\n              <Typography>There is no item added in the cart</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>)\r\n      }\r\n      </React.Fragment>\r\n    );\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartProduct)\r\n","import { Grid } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Bill from './Bill'\r\nimport CartProduct from './CartProduct'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    fleft: {\r\n        float: 'left'\r\n    },\r\n    mtop: {\r\n        marginTop: '10px',\r\n    },\r\n});\r\n\r\nfunction Carts() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container>\r\n                <Grid className={classes.mtop} item xs={12}>\r\n                    <Grid className={classes.fleft} item md={7}>\r\n                        <CartProduct />\r\n                    </Grid>\r\n                    <Grid className={'bill_parent'} item md={5}>\r\n                        <Bill />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Carts\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeMode, fetch_products, searchProduct } from '../redux/ProductsAction';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        marginBottom: '70px'\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        total_products : state.cart.length,\r\n        visible: !state.changeMode\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dispatch: dispatch,\r\n    }\r\n}\r\n\r\nfunction Header(props) {\r\n    const classes = useStyles();\r\n    \r\n    let changeToCart = function() {\r\n        props.dispatch(changeMode(true));\r\n    }\r\n    let changeToHomepage = function() {\r\n        props.dispatch(changeMode(false));\r\n    }\r\n\r\n    let handleSearch = function(event) {\r\n        props.dispatch(searchProduct(event.target.value))\r\n        props.dispatch(fetch_products())\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                <Typography  style={{paddingRight : '6px'}} variant=\"h6\" className={classes.title}>\r\n                    <Link onClick={changeToHomepage} to=\"/\">Homepage</Link>\r\n                </Typography>\r\n                { (props.visible)\r\n                    ? (<div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                          <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={handleSearch}\r\n                        />\r\n                    </div>)\r\n                    : null\r\n                }\r\n                <Button style={{marginRight: '-20px', marginTop: '10px'}}color=\"inherit\"> <Link onClick={changeToCart} to=\"/cart\"><ShoppingCartIcon /></Link></Button>({props.total_products})\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {fetch_products, add_to_cart, remove_from_cart, changeMode, changePage} from '../redux/ProductsAction'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container } from '@material-ui/core';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 268,\r\n        float: 'left',\r\n        margin: '10px',\r\n    },\r\n    media: {\r\n        height: 140,\r\n        backgroundSize: 'contain'\r\n    },\r\n    container: {\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        dispatch: dispatch,\r\n        fetch_products: dispatch(fetch_products()),\r\n    }\r\n}\r\n\r\nfunction Products(props) {\r\n    const classes = useStyles();\r\n\r\n    let addToCart = (objectID) => {\r\n        props.dispatch(add_to_cart(objectID))\r\n    }\r\n\r\n    let removeFromCart = (objectID) => {\r\n        props.dispatch(remove_from_cart(objectID, false, true))\r\n    } \r\n\r\n    let viewCart = function() {\r\n        props.dispatch(changeMode(true));\r\n    }\r\n\r\n    let handleChange = function(event, value) {\r\n        props.dispatch(changePage(value, props.state.searchText));\r\n        props.dispatch(fetch_products());\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n        {(props.state.loading) \r\n            ? <center><CircularProgress /> </center>\r\n            : ((props.state.products && props.state.products.length > 0) ?\r\n                <React.Fragment>\r\n                    <div >\r\n                        <Pagination count={10} color=\"primary\" page={props.state.page} onChange={handleChange}/>\r\n                    </div>\r\n\r\n                    {props.state.products.map((item,index)=>{\r\n                        return (\r\n                            <Card key={index} className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={item.image}\r\n                                        title={item.name}\r\n                                        \r\n                                    />\r\n                                    <CardContent>\r\n                                    <Typography title={item.description} className=\"truncate\" variant=\"button\" display=\"block\">\r\n                                        {item.name}\r\n                                    </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    {(item.in_cart) ?  \r\n                                        <React.Fragment>\r\n                                            <Button size=\"small\" color=\"primary\">\r\n                                                <Link onClick={viewCart} style={{color: '#3f51b5'}}to=\"/cart\">View Cart</Link>\r\n                                            </Button>\r\n                                            <Button onClick={()=> removeFromCart(item.objectID)} title=\"Remove From Cart\" size=\"small\" color=\"primary\">\r\n                                                Remove\r\n                                            </Button>\r\n                                        </React.Fragment>\r\n                                    :\r\n                                        <Button onClick={()=> addToCart(item.objectID)} size=\"small\" color=\"primary\">\r\n                                            Add to Cart\r\n                                        </Button>\r\n                                    }\r\n                                    <Typography style={{marginLeft: 'auto'}} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        Price : $ {item.price}\r\n                                    </Typography>\r\n                                </CardActions>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n\r\n                </React.Fragment>\r\n                : <Alert severity=\"error\">No Products found in the API. Please try something else!</Alert>\r\n            )\r\n        }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import React from 'react';\r\nimport Carts from './Carts';\r\nimport Header from './Header';\r\nimport Products from './Products';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nfunction Homepage() {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path='/' component={Products} />\r\n                <Route exact path='/cart' component={Carts} />\r\n            </Switch>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport Homepage from './components/Homepage'\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <React.Fragment >\r\n          <Homepage />\r\n      </React.Fragment >\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}